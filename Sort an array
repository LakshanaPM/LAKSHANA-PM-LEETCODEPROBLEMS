/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* sortArray(int* nums, int numsSize, int* returnSize) {
    int max=nums[0],i,min=nums[0];
    for(i=1;i<numsSize;i++){
        if(nums[i]>max){
            max=nums[i];
        }
        if(nums[i]<min){
            min=nums[i];
        }
    }
    
    int range=max-min+1;
    int* count=(int*)malloc(range*sizeof(int));
   int* b=(int*)malloc(numsSize*sizeof(int));
   
   for(int i=0;i<range;i++){
    count[i]=0;
   }
   
   
    for(i=0;i<numsSize;i++){
      count[nums[i]-min]=count[nums[i]-min]+1;
    }
    for(i=1;i<range;i++){
        count[i]=count[i]+count[i-1];
    }
    for(i=numsSize-1;i>=0;i--){
        b[--count[nums[i]-min]]=nums[i];
    }
   
    *returnSize=numsSize;
    free(count);
    return b;
}
